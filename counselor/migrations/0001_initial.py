# Generated by Django 5.2 on 2025-04-30 09:53

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Award",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=1000)),
                ("description", models.TextField()),
                ("date_received", models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Course",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=1000)),
                (
                    "type",
                    models.IntegerField(
                        blank=True,
                        choices=[(1, "Regular"), (2, "Honors"), (3, "AP"), (4, "IB")],
                        default=9,
                        null=True,
                    ),
                ),
                (
                    "organization",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Extracurricular",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=1000)),
                ("description", models.TextField()),
                ("position", models.CharField(blank=True, max_length=1000, null=True)),
                (
                    "type",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (1, "Academic"),
                            (2, "Athletics: Club"),
                            (3, "Athletics: JV/Varsity"),
                            (4, "Career Oriented"),
                            (5, "Community Service (Volunteer)"),
                            (6, "Computer/Technology"),
                            (7, "Cultural"),
                            (8, "Dance"),
                            (9, "Debate/Speech"),
                            (10, "Environmental"),
                            (11, "Family Responsibilities"),
                            (12, "Foreign Exchange"),
                            (13, "Foreign Language"),
                            (14, "Internship"),
                            (15, "Journalism/Publication"),
                            (16, "Junior ROTC"),
                            (17, "LGBTQIA+"),
                            (18, "Music: Instrumental"),
                            (19, "Music: Vocal"),
                            (20, "Religious"),
                            (21, "Research"),
                            (22, "Robotics"),
                            (23, "School Spirit"),
                            (24, "Science/Math"),
                            (25, "Social Justice"),
                            (26, "Theater/Drama"),
                            (27, "Work (Paid)"),
                            (28, "Other Club/Activity"),
                        ],
                        default=9,
                        null=True,
                    ),
                ),
                ("start_date", models.DateField(blank=True, null=True)),
                ("end_date", models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Schedule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("id_phrase", models.CharField(max_length=2000)),
                (
                    "grade",
                    models.IntegerField(
                        choices=[
                            (9, "Freshman"),
                            (10, "Sophomore"),
                            (11, "Junior"),
                            (12, "Senior"),
                        ],
                        default=9,
                    ),
                ),
                ("ap_scores", models.JSONField(blank=True, null=True)),
                ("ib_scores", models.JSONField(blank=True, null=True)),
                ("grades", models.JSONField(blank=True, null=True)),
                ("sem1_gpa", models.FloatField(blank=True, null=True)),
                ("sem2_gpa", models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("fname", models.CharField(blank=True, max_length=1000, null=True)),
                ("lname", models.CharField(blank=True, max_length=1000, null=True)),
                ("email", models.EmailField(max_length=1000, unique=True)),
                ("school", models.CharField(blank=True, max_length=1000, null=True)),
                (
                    "grade",
                    models.IntegerField(
                        choices=[
                            (9, "Freshman"),
                            (10, "Sophomore"),
                            (11, "Junior"),
                            (12, "Senior"),
                        ],
                        default=9,
                    ),
                ),
                ("location", models.CharField(max_length=1000)),
                (
                    "citizenship_status",
                    models.IntegerField(
                        choices=[
                            (1, "Citizen"),
                            (2, "Permanent Resident"),
                            (3, "Visa"),
                            (4, "International"),
                        ],
                        default=1,
                    ),
                ),
                ("college_goals", models.TextField(blank=True, null=True)),
                ("major_goals", models.TextField(blank=True, null=True)),
                (
                    "resume",
                    models.FileField(blank=True, null=True, upload_to="resumes/%Y/%m"),
                ),
                ("class_rank", models.IntegerField(blank=True, null=True)),
                ("class_size", models.IntegerField(blank=True, null=True)),
                (
                    "first_gen",
                    models.IntegerField(
                        choices=[(1, "Not First Gen"), (2, "First Gen")], default=1
                    ),
                ),
                ("ethnicity", models.CharField(blank=True, max_length=1000, null=True)),
                ("gender", models.CharField(blank=True, max_length=1000, null=True)),
                ("psat", models.IntegerField(blank=True, null=True)),
                ("sat", models.IntegerField(blank=True, null=True)),
                ("act", models.IntegerField(blank=True, null=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
                (
                    "freshman_schedule",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="fresh_sched",
                        to="counselor.schedule",
                    ),
                ),
                (
                    "junior_schedule",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="jun_sched",
                        to="counselor.schedule",
                    ),
                ),
                (
                    "senior_schedule",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sen_sched",
                        to="counselor.schedule",
                    ),
                ),
                (
                    "sophomore_schedule",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="soph_sched",
                        to="counselor.schedule",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="CollegeApplication",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("college", models.CharField(blank=True, max_length=1000, null=True)),
                (
                    "major",
                    models.CharField(
                        blank=True, default="", max_length=1000, null=True
                    ),
                ),
                ("alt_major", models.CharField(blank=True, max_length=1000, null=True)),
                (
                    "application_type",
                    models.IntegerField(
                        choices=[
                            (1, "Regular Decision"),
                            (2, "Early Decision"),
                            (3, "Early Decision I"),
                            (4, "Early Decision II"),
                            (5, "Early Action"),
                            (6, "Early Action I"),
                            (7, "Early Action II"),
                            (8, "Restrictive Early Action"),
                        ],
                        default=1,
                    ),
                ),
                (
                    "chance",
                    models.IntegerField(
                        choices=[
                            (1, "Safety"),
                            (2, "Target"),
                            (3, "Reach"),
                            (4, "Far Reach"),
                        ],
                        default=1,
                    ),
                ),
                ("deadline", models.DateField(blank=True, null=True)),
                (
                    "location",
                    models.IntegerField(
                        choices=[
                            (1, "In State"),
                            (2, "Out of State"),
                            (3, "International"),
                        ],
                        default=1,
                    ),
                ),
                (
                    "rec_letter_status",
                    models.IntegerField(
                        choices=[(1, "Not Complete"), (2, "Complete")], default=1
                    ),
                ),
                (
                    "general_questions_status",
                    models.IntegerField(
                        choices=[(1, "Not Complete"), (2, "Complete")], default=1
                    ),
                ),
                (
                    "grade_report_status",
                    models.IntegerField(
                        choices=[(1, "Not Complete"), (2, "Complete")], default=1
                    ),
                ),
                (
                    "SAT_ACT_score_status",
                    models.IntegerField(
                        choices=[(1, "Not Complete"), (2, "Complete")], default=1
                    ),
                ),
                (
                    "scholarship_application_status",
                    models.IntegerField(
                        choices=[(1, "Not Complete"), (2, "Complete")], default=1
                    ),
                ),
                (
                    "FAFSA_application_status",
                    models.IntegerField(
                        choices=[(1, "Not Complete"), (2, "Complete")], default=1
                    ),
                ),
                (
                    "application_status",
                    models.IntegerField(
                        choices=[
                            (1, "In Progress"),
                            (2, "Submitted"),
                            (3, "Admitted"),
                            (4, "Deferred"),
                            (5, "Waitlisted"),
                            (6, "Denied"),
                        ],
                        default=1,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="EssayDraft",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("prompt", models.TextField()),
                ("draft", models.TextField()),
                (
                    "application",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="counselor.collegeapplication",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Scholarship",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=1000)),
                ("college", models.CharField(blank=True, max_length=1000, null=True)),
                ("amount", models.FloatField(blank=True, null=True)),
                ("deadline", models.DateField()),
                (
                    "application_status",
                    models.IntegerField(
                        choices=[
                            (1, "In Progress"),
                            (2, "Submitted"),
                            (3, "Accepted"),
                            (4, "Denied"),
                        ],
                        default=1,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TakenCourse",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="counselor.course",
                    ),
                ),
                (
                    "schedule",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="counselor.schedule",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="schedule",
            name="course",
            field=models.ManyToManyField(
                through="counselor.TakenCourse", to="counselor.course"
            ),
        ),
        migrations.CreateModel(
            name="TakenEC",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "extracurricular",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="counselor.extracurricular",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="user",
            name="extracurriculars",
            field=models.ManyToManyField(
                blank=True, through="counselor.TakenEC", to="counselor.extracurricular"
            ),
        ),
        migrations.CreateModel(
            name="WonAward",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "award",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="counselor.award",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="user",
            name="awards",
            field=models.ManyToManyField(
                blank=True, through="counselor.WonAward", to="counselor.award"
            ),
        ),
    ]
